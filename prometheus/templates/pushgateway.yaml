apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pushgateway
  namespace: {{ .Release.Namespace }}

spec:
  replicas: 3
  selector:
    matchLabels:
      app: pushgateway
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: pushgateway
    spec:
      containers:
        - name: pushgateway
          image: prom/pushgateway
          ports:
            - name: pushgateway
              containerPort: 9091
              protocol: TCP
          resources: {}
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3

          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  serviceName: pushgateway
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
  volumeClaimTemplates:
  - metadata:
      name: pushgateway-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "{{ .Values.storageClassName }}"
      resources:
        requests:
          storage: 10Gi
