apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: test

spec:
  replicas: 3
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
      annotations:
        kubectl.kubernetes.io/restartedAt: '2023-09-25T02:57:43Z'
    spec:
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
            items:
              - key: prometheus.yml
                path: prometheus.yml
            defaultMode: 420
      containers:
        - name: prometheus
          image: prom/prometheus
          ports:
            - name: prometheus
              containerPort: 9090
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: prometheus-pvc
        creationTimestamp: null
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName:  {{ .Values.storageClassName }}
        volumeMode: Filesystem
      status:
        phase: Pending
  serviceName: prometheus
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
