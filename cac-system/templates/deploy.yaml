apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: cac
    control-plane: controller-manager
    kubernetes.io/metadata.name: cac-system
  name: cac-system
spec:
  finalizers:
  - kubernetes
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: cacroutes.cac.keli.vip

spec:
  conversion:
    strategy: None
  group: cac.keli.vip
  names:
    kind: CacRoute
    listKind: CacRouteList
    plural: cacroutes
    singular: cacroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.stream[*].backend
      name: Stream
      type: string
    - description: Lsb
      jsonPath: .spec.lsb
      name: Lsb
      type: string
    - description: DepReplicas
      jsonPath: .spec.replicas
      name: DepReplicas
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: CacRoute is the Schema for the cacroutes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CacRouteSpec defines the desired state of CacRoute
            properties:
              lsb:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              replicas:
                format: int32
                type: integer
              stream:
                items:
                  description: StreamConfig defines the configuration for a stream
                    rule.
                  properties:
                    backend:
                      description: BackendConfig defines the backend service for a
                        stream rule.
                      properties:
                        acl:
                          items:
                            type: string
                          type: array
                        lsbPort:
                          format: int32
                          type: integer
                        namespace:
                          type: string
                        serviceName:
                          type: string
                        servicePort:
                          format: int32
                          type: integer
                      required:
                      - acl
                      - lsbPort
                      - namespace
                      - serviceName
                      - servicePort
                      type: object
                    protocol:
                      type: string
                  required:
                  - backend
                  - protocol
                  type: object
                type: array
            required:
            - lsb
            type: object
          status:
            description: CacRouteStatus defines the observed state of CacRoute
            properties:
              ConsulServiceVersion:
                type: string
              DeploymentsVersion:
                type: string
              LoadBalancerVersion:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: CacRoute
    listKind: CacRouteList
    plural: cacroutes
    singular: cacroute
  conditions:
  - lastTransitionTime: "2023-08-30T09:32:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2023-08-30T09:32:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: cac
  name: cac-controller-manager
  namespace: cac-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: cac
  name: cac-leader-election-role
  namespace: cac-system
 
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cac-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cac.keli.vip
  resources:
  - cacroutes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cac.keli.vip
  resources:
  - cacroutes/finalizers
  verbs:
  - update
- apiGroups:
  - cac.keli.vip
  resources:
  - cacroutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cac
  name: cac-metrics-reader

rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cac
  name: cac-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: cac
  name: cac-leader-election-rolebinding
  namespace: cac-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cac-leader-election-role
subjects:
- kind: ServiceAccount
  name: cac-controller-manager
  namespace: cac-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cac
  name: cac-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cac-manager-role
subjects:
- kind: ServiceAccount
  name: cac-controller-manager
  namespace: cac-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cac
  name: cac-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cac-proxy-role
subjects:
- kind: ServiceAccount
  name: cac-controller-manager
  namespace: cac-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: cac
    control-plane: controller-manager
  name: cac-controller-manager-metrics-service
  namespace: cac-system
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  name: cac-service
  namespace: cac-system
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 8500
    protocol: TCP
    targetPort: 8500
  selector:
    control-plane: controller-manager
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: cac
  name: cac-webhook-service
  namespace: cac-system
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: cac
    control-plane: controller-manager
    k8slens-edit-resource-version: v1
  name: cac-controller-manager
  namespace: cac-system
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      control-plane: controller-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      creationTimestamp: null
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - image: huangchengwu6904/hi-app:cac-1691047806
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8500
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 8500
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      serviceAccount: cac-controller-manager
      serviceAccountName: cac-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  generation: 1
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: cac
  name: cac-serving-cert
  namespace: cac-system
spec:
  dnsNames:
  - cac-webhook-service.cac-system.svc
  - cac-webhook-service.cac-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: cac-selfsigned-issuer
  secretName: webhook-server-cert
status:
  conditions:
  - lastTransitionTime: "2023-08-30T09:33:07Z"
    message: Certificate is up to date and has not expired
    observedGeneration: 1
    reason: Ready
    status: "True"
    type: Ready
  notAfter: "2023-11-28T09:33:07Z"
  notBefore: "2023-08-30T09:33:07Z"
  renewalTime: "2023-10-29T09:33:07Z"
  revision: 1
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: cac
  name: cac-selfsigned-issuer
  namespace: cac-system
spec:
  selfSigned: {}
status:
  conditions:
  - lastTransitionTime: "2023-08-30T09:33:07Z"
    observedGeneration: 1
    reason: IsReady
    status: "True"
    type: Ready
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  generation: 2
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mutatingwebhookconfiguration
    app.kubernetes.io/part-of: cac
  name: cac-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lSQUtxUDZBRnF6S2NweUZuZDBTR2pqcXd3RFFZSktvWklodmNOQVFFTEJRQXcKQURBZUZ3MHlNekE0TXpBd09UTXpNRGRhRncweU16RXhNamd3T1RNek1EZGFNQUF3Z2dFaU1BMEdDU3FHU0liMwpEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNyS1NpVjNSYzlJOUhYZTJMMjRxYnN4Tmd2dElKUGR0VnJBbkM3CnpLaUc5U3dwSEFyWW1lV0ZPcTAyN01FMkM2N2hpOUZZWFBtOWNFcjZBcmN3VTZNMkE5Q2pUVWpUODJ1aHhtbGYKRGdTemFaWStmQ0d6TmdMeXJDMFIyZE0vYkRCS045V3ZpaVJONFRpd0p4dVgxVVBlYklVZ2xNN3ZPaEoyVk45bgpadzdDYlFuY1cvVlJ5UENpT2lDaXE4OC9hRDM0NnMvZDJqM0tCMGNWdEZCWDJWR091LzQ2bzJIQXBCSktJOHFQCldXU0ZQQWErN0NiQzBmNGFjRVBjRmV4L05zVFM1WEdEZXBPRjFEa2VYQW5Pb1NMNUptUkR4TG5CMVNEaDAyeFcKVEdhaVhmZkYyS2FwcE5pUVlYVGhGZmE2RjBWdkFmazJHa0VjYVpiRWN2UzFtWUIzQWdNQkFBR2pnWVV3Z1lJdwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01Bd0dBMVVkRXdFQi93UUNNQUF3WWdZRFZSMFJBUUgvQkZnd1ZvSWlZMkZqCkxYZGxZbWh2YjJzdGMyVnlkbWxqWlM1allXTXRjM2x6ZEdWdExuTjJZNEl3WTJGakxYZGxZbWh2YjJzdGMyVnkKZG1salpTNWpZV010YzNsemRHVnRMbk4yWXk1amJIVnpkR1Z5TG14dlkyRnNNQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFBc1ExbERmTjRsclk3NEtrVnpBdFhGaHpHaEtwMGV6U2NYdkZ0TDc3d1lOTnUzZERWUENpd2RxZTRXCmtxR3V6NnB5MlppSW44cjJnczlkNVBFa2lQMFBNWE9XVTNBcWt6S1VoWEpZWUxYL2FFM054Y2h6U1JseFFhcDEKWkdRc3hYbDVyTDNQazBjcDZMUDRPdnVpanNEbkRSWlIwdlF3S3FRcUt3Qm1laUJDaWxjZGR0QUJickkrTXBYNwpCeitXWkc5VzRkRXZzd1VWZm9kSkVtRDlyMThZbXpEdHVwMXdjS1E1NTdJeWJuakYyUlkwYTdvd2NWVFFYbTJYCjViYVBIT2JyenJRYnk4NDRwT3BNZnlDeEl1akFRTG1xRXZ5NjhMUWVBSVVCaHFXd0VYSEVQanMwMmJvS3QzbDkKOE8xOFc2NW1TR0orWjZZaTFxNm5Sc3dySjhWegotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: cac-webhook-service
      namespace: cac-system
      path: /mutate-cac-keli-vip-v1-cacroute
      port: 443
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: mcacroute.kb.io
  namespaceSelector: {}
  objectSelector: {}
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - cac.keli.vip
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - cacroutes
    scope: '*'
  sideEffects: None
  timeoutSeconds: 10
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  generation: 2
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: cac
    app.kubernetes.io/instance: validating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: validatingwebhookconfiguration
    app.kubernetes.io/part-of: cac
  name: cac-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lSQUtxUDZBRnF6S2NweUZuZDBTR2pqcXd3RFFZSktvWklodmNOQVFFTEJRQXcKQURBZUZ3MHlNekE0TXpBd09UTXpNRGRhRncweU16RXhNamd3T1RNek1EZGFNQUF3Z2dFaU1BMEdDU3FHU0liMwpEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNyS1NpVjNSYzlJOUhYZTJMMjRxYnN4Tmd2dElKUGR0VnJBbkM3CnpLaUc5U3dwSEFyWW1lV0ZPcTAyN01FMkM2N2hpOUZZWFBtOWNFcjZBcmN3VTZNMkE5Q2pUVWpUODJ1aHhtbGYKRGdTemFaWStmQ0d6TmdMeXJDMFIyZE0vYkRCS045V3ZpaVJONFRpd0p4dVgxVVBlYklVZ2xNN3ZPaEoyVk45bgpadzdDYlFuY1cvVlJ5UENpT2lDaXE4OC9hRDM0NnMvZDJqM0tCMGNWdEZCWDJWR091LzQ2bzJIQXBCSktJOHFQCldXU0ZQQWErN0NiQzBmNGFjRVBjRmV4L05zVFM1WEdEZXBPRjFEa2VYQW5Pb1NMNUptUkR4TG5CMVNEaDAyeFcKVEdhaVhmZkYyS2FwcE5pUVlYVGhGZmE2RjBWdkFmazJHa0VjYVpiRWN2UzFtWUIzQWdNQkFBR2pnWVV3Z1lJdwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01Bd0dBMVVkRXdFQi93UUNNQUF3WWdZRFZSMFJBUUgvQkZnd1ZvSWlZMkZqCkxYZGxZbWh2YjJzdGMyVnlkbWxqWlM1allXTXRjM2x6ZEdWdExuTjJZNEl3WTJGakxYZGxZbWh2YjJzdGMyVnkKZG1salpTNWpZV010YzNsemRHVnRMbk4yWXk1amJIVnpkR1Z5TG14dlkyRnNNQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFBc1ExbERmTjRsclk3NEtrVnpBdFhGaHpHaEtwMGV6U2NYdkZ0TDc3d1lOTnUzZERWUENpd2RxZTRXCmtxR3V6NnB5MlppSW44cjJnczlkNVBFa2lQMFBNWE9XVTNBcWt6S1VoWEpZWUxYL2FFM054Y2h6U1JseFFhcDEKWkdRc3hYbDVyTDNQazBjcDZMUDRPdnVpanNEbkRSWlIwdlF3S3FRcUt3Qm1laUJDaWxjZGR0QUJickkrTXBYNwpCeitXWkc5VzRkRXZzd1VWZm9kSkVtRDlyMThZbXpEdHVwMXdjS1E1NTdJeWJuakYyUlkwYTdvd2NWVFFYbTJYCjViYVBIT2JyenJRYnk4NDRwT3BNZnlDeEl1akFRTG1xRXZ5NjhMUWVBSVVCaHFXd0VYSEVQanMwMmJvS3QzbDkKOE8xOFc2NW1TR0orWjZZaTFxNm5Sc3dySjhWegotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: cac-webhook-service
      namespace: cac-system
      path: /validate-cac-keli-vip-v1-cacroute
      port: 443
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: vcacroute.kb.io
  namespaceSelector: {}
  objectSelector: {}
  rules:
  - apiGroups:
    - cac.keli.vip
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - cacroutes
    scope: '*'
  sideEffects: None
  timeoutSeconds: 10
---
apiVersion: cac.keli.vip/v1
kind: CacRoute
metadata:
  name: app-cac
  namespace: cac-system
spec:
  lsb: {{ .Values.wan_ip }}
  stream:
    - backend:
        acl:
          - allow all
        lsbPort: 80
        namespace: default
        serviceName: my-service
        servicePort: 80
      protocol: TCP
---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: first-wan
  namespace: metallb-system
spec:
  addresses:
    - "{{ .Values.wan_ip }}-{{ .Values.wan_ip }}"
  autoAssign: true
  avoidBuggyIPs: true
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: example
  namespace: metallb-system
spec:
  ipAddressPools:
    - first-wan
